{
    "openapi": "3.0.0",
    "info": {
        "title": "Wildberries API",
        "version": "1.0.0"
    },
    "paths": {
        "/public/api/v1/prices": {
            "post": {
                "summary": "Загрузка цен. За раз можно загрузить не более 1000 номенклатур.",
                "description": "Загрузка цен. За раз можно загрузить не более 1000 номенклатур.",
                "tags": ["Цены"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Prices"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Цены успешно отправлены."
                    },
                    "400": {
                        "description": "Ошибка валидации.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации."
                    },
                    "403": {
                        "description": "С данным уровнем прав запрещено загружать цены."
                    },
                    "500": {
                        "description": "На сервере случилась ошибка."
                    }
                }
            }
        },
        "/public/api/v1/info": {
            "get": {
                "description": "Получение информации по номенклатурам, их ценам, скидкам и промокодам. Если не указывать фильтры, вернётся весь товар.",
                "summary": "Получение информации по номенклатурам, их ценам, скидкам и промокодам. Если не указывать фильтры, вернётся весь товар.",
                "tags": ["Цены"],
                "parameters": [
                    {
                        "in": "query",
                        "name": "quantity",
                        "description": "2 - товар с нулевым остатком, 1 - товар с ненулевым остатком, 0 - товар с любым остатком",
                        "schema": {
                            "type": "integer",
                            "enum": [0, 1, 2]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешно возвращено.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Info"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Ошибка авторизации."
                    },
                    "403": {
                        "description": "Запрещено."
                    },
                    "500": {
                        "description": "На сервере случилась ошибка."
                    }
                }
            }
        },
        "/public/api/v1/updateDiscounts": {
            "post": {
                "description": "Установка скидок для номенклатур. Максимальное количество номенклатур на запрос - 1000",
                "summary": "Установка скидок для номенклатур. Максимальное количество номенклатур на запрос - 1000",
                "tags": ["Промокоды и скидки"],
                "parameters": [
                    {
                        "description": "Дата активации скидки в формате YYYY-MM-DD или YYYY-MM-DD HH:MM:SS. Если не указывать, скидка начнет действовать сразу",
                        "in": "query",
                        "name": "activateFrom",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/modelsNomenclatureArray"
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/public/api/v1/revokeDiscounts": {
            "post": {
                "tags": ["Промокоды и скидки"],
                "description": "Сброс скидок для номенклатур",
                "summary": "Сброс скидок для номенклатур",
                "parameters": [
                    {
                        "description": "required",
                        "in": "body",
                        "name": "nmIDs",
                        "required": true,
                        "schema": {
                            "items": {
                                "type": "integer"
                            },
                            "type": "array",
                            "example": [12345678, 81234567]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/public/api/v1/updatePromocodes": {
            "post": {
                "tags": ["Промокоды и скидки"],
                "description": "Установка промокодов для номенклатур. Максимальное количество номенклатур на запрос - 1000",
                "summary": "Установка промокодов для номенклатур. Максимальное количество номенклатур на запрос - 1000",
                "parameters": [
                    {
                        "description": "Дата активации промокада в формате YYYY-MM-DD или YYYY-MM-DD HH:MM:SS. Если не указывать, промокод начнет действовать сразу",
                        "in": "query",
                        "name": "activateFrom",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/modelsNomenclatureArray"
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/public/api/v1/revokePromocodes": {
            "post": {
                "tags": ["Промокоды и скидки"],
                "description": "Сброс промокодов для номенклатур",
                "summary": "Сброс промокодов для номенклатур",
                "parameters": [
                    {
                        "description": "required",
                        "in": "body",
                        "name": "nmIDs",
                        "required": true,
                        "schema": {
                            "items": {
                                "type": "integer"
                            },
                            "type": "array",
                            "example": [12345678, 81234567]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/stocks": {
            "get": {
                "tags": ["Marketplace"],
                "description": "Возвращает список товаров поставщика с их остатками",
                "summary": "Возвращает список товаров поставщика с их остатками",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "description": "Выполняет поиск по всем полям таблицы",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": "Задает сколько записей пропустить (для пагинации)",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "take",
                        "description": "Задает сколько записей выдать (для пагинации)",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "Сортирует ответ по полю. По умолчанию или для неизвестного столбца сортирует по имени.",
                        "schema": {
                            "type": "string",
                            "enum": ["subject", "brand", "name", "size", "barcode", "article"]
                        }
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Задает порядок сортировки",
                        "schema": {
                            "type": "string",
                            "enum": ["asc", "desc"]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StocksAPIResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Marketplace"],
                "description": "Обновляет остатки товаров",
                "summary": "Обновляет остатки товаров",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetStockAPIRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Если пришёл флаг error = true, то во время заливки случилась ошибка. В ответе будут перечислены баркоды остатков, которые не загрузились.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetStocksAPIError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/warehouses": {
            "get": {
                "tags": ["Marketplace"],
                "description": "Возвращает список складов поставщика",
                "summary": "Возвращает список складов поставщика",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WarehousesAPIResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/orders": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "date_start",
                        "required": true,
                        "description": "с какой даты вернуть сборочные задания (заказы) (в формате RFC3339)",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "date_end",
                        "required": false,
                        "description": "по какую дату вернуть сборочные задания (заказы) (в формате RFC3339)",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "take",
                        "required": true,
                        "description": "сколько записей вернуть за раз",
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "example": 10
                        }
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "required": true,
                        "description": "сколько записей пропустить",
                        "schema": {
                            "type": "integer",
                            "example": 0
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "description": "идентификатор сборочного задания",
                        "schema": {
                            "type": "integer",
                            "example": 123456
                        }
                    }
                ],
                "tags": ["Marketplace"],
                "description": "Возвращает список сборочных заданий поставщика. При выборе промежутка времени заказы следует забирать с помощью параметров skip и take, не более чем 1000 за один запрос. Параметр total подсказывает, сколько всего заказов было сделано за текущий промежуток времени.",
                "summary": "Возвращает список сборочных заданий поставщика.",
                "responses": {
                    "200": {
                        "description": "Список сборочных заданий",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrdersAPIResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Marketplace"],
                "description": "Обновляет статус переданных сборочных заданий.",
                "summary": "Обновляет статус переданных сборочных заданий.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOrderStatus"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Обновление прошло успешно."
                    },
                    "400": {
                        "description": "Ошибка обновления статуса заказов.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateOrderStatusError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "На сервере случилась ошибка. Повторите позже."
                    }
                }
            }
        },
        "/card/batchCreate": {
            "post": {
                "tags": ["Card"],
                "summary": "Создание группы карточек",
                "description": "Создаёт группу новых карточек карточек.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "example": 1,
                                        "oneOf": [
                                            {
                                                "type": "number"
                                            },
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            }
                                        ]
                                    },
                                    "jsonrpc": {
                                        "type": "string",
                                        "example": "2.0"
                                    },
                                    "params": {
                                        "$ref": "#/components/schemas/requestCardBatchCreate"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "example": 1,
                                                    "oneOf": [
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        }
                                                    ]
                                                },
                                                "jsonrpc": {
                                                    "type": "string",
                                                    "example": "2.0"
                                                },
                                                "result": {
                                                    "$ref": "#/components/schemas/responseCardBatchCreate"
                                                }
                                            }
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "error": {
                                                    "type": "object",
                                                    "properties": {
                                                        "code": {
                                                            "type": "number",
                                                            "format": "int32",
                                                            "example": -32603
                                                        },
                                                        "data": {
                                                            "type": "object",
                                                            "nullable": true
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "not found"
                                                        }
                                                    },
                                                    "nullable": true
                                                },
                                                "id": {
                                                    "example": 1,
                                                    "oneOf": [
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        }
                                                    ]
                                                },
                                                "jsonrpc": {
                                                    "type": "string",
                                                    "example": "2.0"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/card/cardByImtID": {
            "post": {
                "tags": ["Card"],
                "summary": "Получение карточки поставщика по imt id",
                "description": "Получение карточки поставщика по imt id",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "example": 1,
                                        "oneOf": [
                                            {
                                                "type": "number"
                                            },
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            }
                                        ]
                                    },
                                    "jsonrpc": {
                                        "type": "string",
                                        "example": "2.0"
                                    },
                                    "params": {
                                        "$ref": "#/components/schemas/requestCardCardByImtID"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "example": 1,
                                                    "oneOf": [
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        }
                                                    ]
                                                },
                                                "jsonrpc": {
                                                    "type": "string",
                                                    "example": "2.0"
                                                },
                                                "result": {
                                                    "$ref": "#/components/schemas/responseCardCardByImtID"
                                                }
                                            }
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "error": {
                                                    "type": "object",
                                                    "properties": {
                                                        "code": {
                                                            "type": "number",
                                                            "format": "int32",
                                                            "example": -32603
                                                        },
                                                        "data": {
                                                            "type": "object",
                                                            "nullable": true
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "not found"
                                                        }
                                                    },
                                                    "nullable": true
                                                },
                                                "id": {
                                                    "example": 1,
                                                    "oneOf": [
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        }
                                                    ]
                                                },
                                                "jsonrpc": {
                                                    "type": "string",
                                                    "example": "2.0"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/card/create": {
            "post": {
                "tags": ["Card"],
                "summary": "Создание одной карточки",
                "description": "Создаёт одну новую карточку.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "example": 1,
                                        "oneOf": [
                                            {
                                                "type": "number"
                                            },
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            }
                                        ]
                                    },
                                    "jsonrpc": {
                                        "type": "string",
                                        "example": "2.0"
                                    },
                                    "params": {
                                        "$ref": "#/components/schemas/requestCardCreate"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "example": 1,
                                                    "oneOf": [
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        }
                                                    ]
                                                },
                                                "jsonrpc": {
                                                    "type": "string",
                                                    "example": "2.0"
                                                },
                                                "result": {
                                                    "$ref": "#/components/schemas/responseCardCreate"
                                                }
                                            }
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "error": {
                                                    "type": "object",
                                                    "properties": {
                                                        "code": {
                                                            "type": "number",
                                                            "format": "int32",
                                                            "example": -32603
                                                        },
                                                        "data": {
                                                            "type": "object",
                                                            "nullable": true
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "not found"
                                                        }
                                                    },
                                                    "nullable": true
                                                },
                                                "id": {
                                                    "example": 1,
                                                    "oneOf": [
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        }
                                                    ]
                                                },
                                                "jsonrpc": {
                                                    "type": "string",
                                                    "example": "2.0"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/card/deleteNomenclature": {
            "post": {
                "tags": ["Card"],
                "summary": "Удалить номенклатуру из карточки",
                "description": "Удаляет одну номенклатуру из карточки товара.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "example": 1,
                                        "oneOf": [
                                            {
                                                "type": "number"
                                            },
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            }
                                        ]
                                    },
                                    "jsonrpc": {
                                        "type": "string",
                                        "example": "2.0"
                                    },
                                    "params": {
                                        "$ref": "#/components/schemas/requestCardDeleteNomenclature"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "example": 1,
                                                    "oneOf": [
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        }
                                                    ]
                                                },
                                                "jsonrpc": {
                                                    "type": "string",
                                                    "example": "2.0"
                                                },
                                                "result": {
                                                    "$ref": "#/components/schemas/responseCardDeleteNomenclature"
                                                }
                                            }
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "error": {
                                                    "type": "object",
                                                    "properties": {
                                                        "code": {
                                                            "type": "number",
                                                            "format": "int32",
                                                            "example": -32603
                                                        },
                                                        "data": {
                                                            "type": "object",
                                                            "nullable": true
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "not found"
                                                        }
                                                    },
                                                    "nullable": true
                                                },
                                                "id": {
                                                    "example": 1,
                                                    "oneOf": [
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        }
                                                    ]
                                                },
                                                "jsonrpc": {
                                                    "type": "string",
                                                    "example": "2.0"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/card/file/{supplierID}/{fileID}": {
            "get": {
                "tags": ["Card"],
                "summary": "Выгрузить файл из хранилища",
                "description": "Позволяет выгружать файлы из хранилища. **data** содержит массив байт, который является файлом. ",
                "parameters": [
                    {
                        "in": "path",
                        "name": "supplierID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "path",
                        "name": "fileID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/responseFilesDownload"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/card/getBarcodes": {
            "post": {
                "tags": ["Card"],
                "summary": "Сгенерировать шк",
                "description": "Позволяет сгенерировать шк для размера",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "example": 1,
                                        "oneOf": [
                                            {
                                                "type": "number"
                                            },
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            }
                                        ]
                                    },
                                    "jsonrpc": {
                                        "type": "string",
                                        "example": "2.0"
                                    },
                                    "params": {
                                        "$ref": "#/components/schemas/requestCardGetBarcodes"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "example": 1,
                                                    "oneOf": [
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        }
                                                    ]
                                                },
                                                "jsonrpc": {
                                                    "type": "string",
                                                    "example": "2.0"
                                                },
                                                "result": {
                                                    "$ref": "#/components/schemas/responseCardGetBarcodes"
                                                }
                                            }
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "error": {
                                                    "type": "object",
                                                    "properties": {
                                                        "code": {
                                                            "type": "number",
                                                            "format": "int32",
                                                            "example": -32603
                                                        },
                                                        "data": {
                                                            "type": "object",
                                                            "nullable": true
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "not found"
                                                        }
                                                    },
                                                    "nullable": true
                                                },
                                                "id": {
                                                    "example": 1,
                                                    "oneOf": [
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        }
                                                    ]
                                                },
                                                "jsonrpc": {
                                                    "type": "string",
                                                    "example": "2.0"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/card/list": {
            "post": {
                "tags": ["Card"],
                "summary": "Получить список карточек поставщика с фильтром и сортировкой",
                "description": "Позволяет получить массив карточек товаров, удовлетворяющих фильтру и с указанной сортировкой. **order** - порядок отображения карточек.Может принимать значения **asc** или **desc**.**sort** - какие **columns** и с какими **excludedValues** исключить.**find** - поиск карточке с определённым **search**(значением) в определённом **columns**.**query** позволяет получать не все карточки сразу: **limit** - сколько карточек максимум вывести, **offset** - сколько карточек от самой первой пропустить.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "example": 1,
                                        "oneOf": [
                                            {
                                                "type": "number"
                                            },
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            }
                                        ]
                                    },
                                    "jsonrpc": {
                                        "type": "string",
                                        "example": "2.0"
                                    },
                                    "params": {
                                        "$ref": "#/components/schemas/requestCardList"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "example": 1,
                                                    "oneOf": [
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        }
                                                    ]
                                                },
                                                "jsonrpc": {
                                                    "type": "string",
                                                    "example": "2.0"
                                                },
                                                "result": {
                                                    "$ref": "#/components/schemas/responseCardList"
                                                }
                                            }
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "error": {
                                                    "type": "object",
                                                    "properties": {
                                                        "code": {
                                                            "type": "number",
                                                            "format": "int32",
                                                            "example": -32603
                                                        },
                                                        "data": {
                                                            "type": "object",
                                                            "nullable": true
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "not found"
                                                        }
                                                    },
                                                    "nullable": true
                                                },
                                                "id": {
                                                    "example": 1,
                                                    "oneOf": [
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        }
                                                    ]
                                                },
                                                "jsonrpc": {
                                                    "type": "string",
                                                    "example": "2.0"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/card/update": {
            "post": {
                "tags": ["Card"],
                "summary": "Обновить карточку",
                "description": "Позволяет обновлять карточку товара.Карточка с определённым ID изменяется на ту, которую прислали.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "example": 1,
                                        "oneOf": [
                                            {
                                                "type": "number"
                                            },
                                            {
                                                "type": "string",
                                                "format": "uuid"
                                            }
                                        ]
                                    },
                                    "jsonrpc": {
                                        "type": "string",
                                        "example": "2.0"
                                    },
                                    "params": {
                                        "$ref": "#/components/schemas/requestCardUpdate"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "example": 1,
                                                    "oneOf": [
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        }
                                                    ]
                                                },
                                                "jsonrpc": {
                                                    "type": "string",
                                                    "example": "2.0"
                                                },
                                                "result": {
                                                    "$ref": "#/components/schemas/responseCardUpdate"
                                                }
                                            }
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "error": {
                                                    "type": "object",
                                                    "properties": {
                                                        "code": {
                                                            "type": "number",
                                                            "format": "int32",
                                                            "example": -32603
                                                        },
                                                        "data": {
                                                            "type": "object",
                                                            "nullable": true
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "not found"
                                                        }
                                                    },
                                                    "nullable": true
                                                },
                                                "id": {
                                                    "example": 1,
                                                    "oneOf": [
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        }
                                                    ]
                                                },
                                                "jsonrpc": {
                                                    "type": "string",
                                                    "example": "2.0"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/card/upload/file/multipart": {
            "post": {
                "tags": ["Card"],
                "summary": "Загрузить файл в хранилище",
                "description": "Позволяет загружать файлы в хранилище. **fileID** заполняется из названия файла. **data** заполняется из параметра **uploadfile**.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-File-Id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/requestFilesUploadMultipart"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        }
    },
    "security": [
        {
            "Authorization": []
        }
    ],
    "components": {
        "requestBodies": {
            "modelsNomenclatureArray": {
                "content": {
                    "application/json": {
                        "schema": {
                            "items": {
                                "$ref": "#/components/schemas/modelsNomenclature"
                            },
                            "type": "array"
                        }
                    }
                },
                "description": "required",
                "required": true
            }
        },
        "securitySchemes": {
            "Authorization": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        },
        "schemas": {
            "modelsNomenclature": {
                "properties": {
                    "discount": {
                        "type": "integer",
                        "example": 15
                    },
                    "nm": {
                        "type": "integer",
                        "example": 12345678
                    }
                },
                "type": "object"
            },
            "Addin": {
                "type": "object",
                "properties": {
                    "params": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Parameter"
                        },
                        "nullable": true
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "Card": {
                "type": "object",
                "properties": {
                    "addin": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Addin"
                        },
                        "nullable": true,
                        "description": "Общие характеристики товара"
                    },
                    "countryProduction": {
                        "type": "string",
                        "description": "Страна-изготовитель товара"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Дата создания карточки. Заполняется автоматически"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Идентификатор карточки. Генерируется при создании карточки"
                    },
                    "imtId": {
                        "type": "number",
                        "format": "uint64",
                        "description": "Не используется поставщиком"
                    },
                    "imtSupplierId": {
                        "type": "number",
                        "format": "uint64",
                        "description": "Не используется поставщиком"
                    },
                    "nomenclatures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Nomenclature"
                        },
                        "nullable": true,
                        "description": "Структура с характеристиками номенклатур товара"
                    },
                    "object": {
                        "type": "string",
                        "description": "Продукт. К какой категории принадлежит товар (джинсы, книги и прочее)"
                    },
                    "parent": {
                        "type": "string",
                        "description": "Родительская категория"
                    },
                    "supplierId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Идентификатор поставщика. Подставляется автоматически"
                    },
                    "supplierVendorCode": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Дата последнего обновления карточки. Заполняется автоматически"
                    },
                    "uploadID": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Айди массовой загрузки, в процессе которой была создана карточка. Если айди пуст, то карточка была создана другим способом"
                    },
                    "userId": {
                        "type": "number",
                        "format": "uint64",
                        "description": "Идентификатор пользователя, создавшего карточку. Подставляется автоматически"
                    }
                }
            },
            "Cursor": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "number",
                        "format": "int"
                    },
                    "offset": {
                        "type": "number",
                        "format": "int"
                    },
                    "total": {
                        "type": "number",
                        "format": "int"
                    }
                }
            },
            "Filter": {
                "type": "object",
                "properties": {
                    "column": {
                        "type": "string"
                    },
                    "excludedValues": {
                        "type": "object",
                        "nullable": true
                    }
                }
            },
            "Find": {
                "type": "object",
                "properties": {
                    "column": {
                        "type": "string"
                    },
                    "search": {
                        "type": "object",
                        "nullable": true
                    }
                }
            },
            "Nomenclature": {
                "type": "object",
                "properties": {
                    "addin": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Addin"
                        },
                        "nullable": true,
                        "description": "Характеристики конкретной номенклатуры товара"
                    },
                    "concatVendorCode": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Идентификатор цвета товара. Генерируется при создании карточки"
                    },
                    "isArchive": {
                        "type": "boolean"
                    },
                    "nmId": {
                        "type": "number",
                        "format": "uint64",
                        "description": "Не используется поставщиком"
                    },
                    "variations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Variation"
                        },
                        "nullable": true,
                        "description": "Структура с характеристиками различных размеров номенклатуры"
                    },
                    "vendorCode": {
                        "type": "string",
                        "description": "Артикул товара"
                    }
                }
            },
            "Order": {
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string",
                        "description": "Идентификатор заказа",
                        "example": 13833711,
                        "maxLength": 32
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date",
                        "description": "Дата создания заказа (RFC3339)",
                        "example": "2021-02-20T16:50:33.365+03:00"
                    },
                    "wbWhId": {
                        "type": "integer",
                        "description": "Идентификатор склада WB, на которой заказ должен быть доставлен",
                        "example": 119408
                    },
                    "pid": {
                        "type": "integer",
                        "description": "Идентификатор ПВЗ/магазина, куда необходимо доставить заказ (если применимо)"
                    },
                    "officeAddress": {
                        "type": "string",
                        "description": "Адрес ПВЗ/магазина, куда необходимо доставить заказ (если применимо)",
                        "example": "г Ставрополь (Ставропольский край), Ленина 482/1"
                    },
                    "deliveryAddress": {
                        "type": "string",
                        "description": "Адрес клиента для доставки",
                        "example": "улица, дом, квартира"
                    },
                    "userInfo": {
                        "type": "object",
                        "description": "Информация о клиенте",
                        "properties": {
                            "userId": {
                                "type": "integer",
                                "description": "ИД пользователя",
                                "example": 123
                            },
                            "fio": {
                                "type": "string",
                                "description": "ФИО",
                                "example": "Иванов Иван Иванович"
                            },
                            "phone": {
                                "type": "string",
                                "description": "Номер телефона",
                                "example": 79991112233
                            }
                        }
                    },
                    "chrtId": {
                        "type": "integer",
                        "description": "Идентификатор артикула",
                        "example": 11111111
                    },
                    "barcode": {
                        "type": "string",
                        "description": "Штрихкод товара",
                        "example": 6665956397512
                    },
                    "status": {
                        "type": "integer",
                        "description": "0\t- Новый заказ 1\t- Принял заказ 2\t- Сборочное задание завершено 3\t- Сборочное задание отклонено 5 - На доставке курьером 6 - Курьер довез и клиент принял товар 7 - Клиент не принял товар\n",
                        "enum": [0, 1, 2, 3, 5, 6, 7],
                        "example": 2
                    },
                    "userStatus": {
                        "type": "integer",
                        "description": "1 - Отмена клиента 2 - Доставлен 3 - Возврат 4 - Ожидает 5 - Брак\n",
                        "enum": [1, 2, 3, 4, 5],
                        "example": 2
                    },
                    "rid": {
                        "type": "string",
                        "description": "Уникальный идентификатор вещи, разный у одинаковых chrt_id",
                        "maxLength": 32,
                        "example": 100321840623
                    },
                    "totalPrice": {
                        "type": "integer",
                        "description": "Стоимость товара с учетом скидок в копейках!",
                        "example": 5600
                    },
                    "orderUID": {
                        "type": "string",
                        "description": "Идентификатор транзакции (для группировки заказов)"
                    },
                    "sticker": {
                        "type": "object",
                        "properties": {
                            "wbStickerId": {
                                "type": "integer",
                                "description": "Идентификатор этикетки",
                                "example": 2316489753
                            },
                            "wbStickerIdParts": {
                                "type": "object",
                                "properties": {
                                    "A": {
                                        "type": "string",
                                        "example": 231648,
                                        "description": "Первая часть идентификатора этикетки (для печати подписи)",
                                        "maxLength": 15
                                    },
                                    "B": {
                                        "type": "string",
                                        "example": 9753,
                                        "description": "Вторая часть идентификатора этикетки",
                                        "maxLength": 15
                                    }
                                }
                            },
                            "wbStickerEncoded": {
                                "type": "string",
                                "description": "Закодированное значение стикера (представляется на этикетке в формате Code-128)",
                                "example": "!uKEtQZVx",
                                "maxLength": 15
                            },
                            "wbStickerSvgBase64": {
                                "type": "string",
                                "example": "PD94bWwgdmVyc2lvbj0iMS4wIj8+CjwhLS0gR2VuZXJhdGVkIGJ5IFNWR28gLS0+Cjxzdmcgd2lkdGg9IjQwMCIgaGVpZ2h0PSIzMDAiCiAgICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICAgIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIj4KPHJlY3QgeD0iMCIgeT0iMCIgd2lkdGg9IjQwMCIgaGVpZQiIGhlaWdodD0iMTcwIiBzdHlsZT0iZmlsbDpibGFjayIgLz4KPHJlY3QgeD0iMzE4IiB5PSIyMCIgd2lkdGg9IjYiIGhlaWdodD0iMTcwIiBzdHlsZT0iZmlsbDpibGFjayIgLz4KPHJlY3QgeD0iMzI2IiB5PSIyMCIgd2lkdGg9IjIiIGhlaWdodD0iMTcwIiBzdHlsZT0iZmlsbDpibGFjayIgLz4KPHJlY3QgeD0iMzMwIiB5PSIyMCIgd2lkdGg9IjQiIGhlaWdodD0iMTcwIiBzdHlsZT0iZmlsbDpibGFjayIgLz4KPHJlY3QgeD0iMjAiIHk9IjIwMCIgd2lkdGg9IjM1MCIgaGVpZ2h0PSI5MCIgc3R5bGU9ImZpbGw6YmxhY2siIC8+Cjx0ZXh0IHg9IjMwIiB5PSIyNDAiIHN0eWxlPSJmaWxsOndoaXRlO2ZvbnQtc2l6ZTozMHB0O3RleHQtYW5jaG9yOnN0YXJ0IiA+MjMxNjQ4PC90ZXh0Pgo8dGV4dCB4PSIzNTAiIHk9IjI3MCIgc3R5bGU9ImZpbGw6d2hpdGU7Zm9udC1zaXplOjUwcHQ7dGV4dC1hbmNob3I6ZW5kIiA+OTc1MzwvdGV4dD4KPC9zdmc+Cg==",
                                "description": "Полное представление этикетки в векторном формате",
                                "maxLength": 5000
                            },
                            "wbStickerZplV": {
                                "type": "string",
                                "example": "^XZ\n^XA\n^CI28\n^CF0\n^LS0\n^FT26,160^BY2^BCN,140,N,N^FD!uKEtQZVx^FS\n^FO30,177^FB200,1,0,L^AZN,35,40^FD231648^FS\n^FO160,173^FB110,1,0,R^AZN,68,50^FD9753^FS\n^LRY^FO20,170^GB280,60,50^FS^LRN\n^XZ",
                                "description": "Полное представление этикетки в формате ZPL (вертикальное положение)",
                                "maxLength": 300
                            },
                            "wbStickerZpl": {
                                "type": "string",
                                "example": "^XZ\n^XA\n^CI28\n^CF0\n^LS0\n^FO20,26^BY2^BCR,140,N,N^FD!uKEtQZVx^FS\n^FO177,87^FB200,1,0,L^AZB,35,40^FD231648^FS\n^FO173,50^FB110,1,0,R^AZB,68,50^FD9753^FS\n^LRY^FO170,20^GB60,280,50^FS^LRN\n^XZ",
                                "description": "Полное представление этикетки в формате ZPL (горизонтальное положение)",
                                "maxLength": 300
                            }
                        }
                    }
                }
            },
            "SetStocksAPIError": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "boolean"
                    },
                    "errorText": {
                        "type": "string"
                    },
                    "additionalErrors": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "errors": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "barcode": {
                                            "type": "string",
                                            "description": "Баркод",
                                            "example": 123456789
                                        },
                                        "err": {
                                            "type": "string",
                                            "enum": [
                                                "указан отрицательный остаток",
                                                "не указан баркод",
                                                "баркод не принадлежит данному поставщику"
                                            ],
                                            "description": "Ошибка, случившаяся при загрудке остатка с данным баркодом",
                                            "example": "указан отрицательный остаток"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Parameter": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "number",
                        "format": "float"
                    },
                    "units": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Sort": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Filter"
                        },
                        "nullable": true
                    },
                    "find": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Find"
                        },
                        "nullable": true
                    },
                    "order": {
                        "$ref": "#/components/schemas/Order"
                    }
                }
            },
            "Variation": {
                "type": "object",
                "properties": {
                    "addin": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Addin"
                        },
                        "nullable": true,
                        "description": "Характеристики конкретной вариации номенклатуры"
                    },
                    "barcode": {
                        "type": "string"
                    },
                    "barcodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true,
                        "description": "Штрихкоды"
                    },
                    "chrtId": {
                        "type": "number",
                        "format": "uint64",
                        "description": "Не используется поставщиком"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true,
                        "description": "Ошибки от старой спеки"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Идентификатор. Генерируется автоматически"
                    }
                }
            },
            "requestCardBatchCreate": {
                "type": "object",
                "properties": {
                    "card": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Card"
                        },
                        "nullable": true
                    },
                    "supplierID": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "description": "Создаёт группу новых карточек карточек."
            },
            "requestCardCardByImtID": {
                "type": "object",
                "properties": {
                    "imtID": {
                        "type": "number",
                        "format": "uint64"
                    },
                    "supplierID": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "description": "Получение карточки поставщика по imt id"
            },
            "requestCardCreate": {
                "type": "object",
                "properties": {
                    "card": {
                        "$ref": "#/components/schemas/Card"
                    },
                    "supplierID": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "description": "Создаёт одну новую карточку."
            },
            "requestCardDeleteNomenclature": {
                "type": "object",
                "properties": {
                    "nomenclatureID": {
                        "type": "number",
                        "format": "int64"
                    },
                    "supplierID": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "description": "Удаляет одну номенклатуру из карточки товара."
            },
            "requestCardGetBarcodes": {
                "type": "object",
                "properties": {
                    "quantity": {
                        "type": "number",
                        "format": "int64"
                    },
                    "supplierID": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "description": "Позволяет сгенерировать шк для размера"
            },
            "requestCardList": {
                "type": "object",
                "properties": {
                    "filter": {
                        "$ref": "#/components/schemas/Sort"
                    },
                    "isArchive": {
                        "type": "boolean"
                    },
                    "query": {
                        "$ref": "#/components/schemas/Cursor"
                    },
                    "supplierID": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "withError": {
                        "type": "boolean"
                    }
                },
                "description": "Позволяет получить массив карточек товаров, удовлетворяющих фильтру и с указанной сортировкой. **order** - порядок отображения карточек.Может принимать значения **asc** или **desc**.**sort** - какие **columns** и с какими **excludedValues** исключить.**find** - поиск карточке с определённым **search**(значением) в определённом **columns**.**query** позволяет получать не все карточки сразу: **limit** - сколько карточек максимум вывести, **offset** - сколько карточек от самой первой пропустить."
            },
            "requestCardUpdate": {
                "type": "object",
                "properties": {
                    "card": {
                        "$ref": "#/components/schemas/Card"
                    },
                    "supplierID": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "description": "Позволяет обновлять карточку товара.Карточка с определённым ID изменяется на ту, которую прислали."
            },
            "requestFilesDownload": {
                "type": "object"
            },
            "requestFilesUploadMultipart": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "file",
                        "format": "byte"
                    }
                },
                "description": "Позволяет загружать файлы в хранилище. **fileID** заполняется из названия файла. **data** заполняется из параметра **uploadfile**."
            },
            "responseCardBatchCreate": {
                "type": "object"
            },
            "responseCardCardByImtID": {
                "type": "object",
                "properties": {
                    "card": {
                        "$ref": "#/components/schemas/Card"
                    }
                },
                "description": "Получение карточки поставщика по imt id"
            },
            "responseCardCreate": {
                "type": "object"
            },
            "responseCardDeleteNomenclature": {
                "type": "object"
            },
            "responseCardGetBarcodes": {
                "type": "object",
                "properties": {
                    "barcodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "description": "Позволяет сгенерировать шк для размера"
            },
            "responseCardList": {
                "type": "object",
                "properties": {
                    "cards": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Card"
                        },
                        "nullable": true
                    },
                    "cursor": {
                        "$ref": "#/components/schemas/Cursor"
                    }
                },
                "description": "Позволяет получить массив карточек товаров, удовлетворяющих фильтру и с указанной сортировкой. **order** - порядок отображения карточек.Может принимать значения **asc** или **desc**.**sort** - какие **columns** и с какими **excludedValues** исключить.**find** - поиск карточке с определённым **search**(значением) в определённом **columns**.**query** позволяет получать не все карточки сразу: **limit** - сколько карточек максимум вывести, **offset** - сколько карточек от самой первой пропустить."
            },
            "responseCardUpdate": {
                "type": "object"
            },
            "responseFilesDownload": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "string",
                        "format": "byte"
                    }
                },
                "description": "Позволяет выгружать файлы из хранилища. **data** содержит массив байт, который является файлом. "
            },
            "responseFilesUploadMultipart": {
                "type": "object"
            },
            "Prices": {
                "type": "array",
                "items": {
                    "type": "object",
                    "description": "Массив номенклатур и их цен",
                    "properties": {
                        "nmId": {
                            "type": "integer",
                            "description": "номенклатура",
                            "example": 1234567
                        },
                        "price": {
                            "type": "number",
                            "format": "float",
                            "description": "цена (указывать без копеек)",
                            "example": 1000
                        }
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "description": "Перечень ошибок, случившихся при валидации загружаемых цен.",
                        "items": {
                            "type": "string",
                            "description": "Текст ошибки",
                            "example": "Ошибка"
                        }
                    }
                }
            },
            "Stock": {
                "type": "object",
                "description": "Описывает остаток товара",
                "required": ["id", "name"],
                "properties": {
                    "subject": {
                        "type": "string",
                        "description": "Категория",
                        "example": "Кольца"
                    },
                    "brand": {
                        "type": "string",
                        "description": "Бренд",
                        "example": "Средиземье"
                    },
                    "name": {
                        "type": "string",
                        "description": "Наименование",
                        "example": "Кольцо Всевластья"
                    },
                    "size": {
                        "type": "string",
                        "description": "Размер",
                        "example": 24
                    },
                    "barcode": {
                        "type": "string",
                        "description": "Баркод",
                        "example": "656335639"
                    },
                    "article": {
                        "type": "string",
                        "description": "Артикул поставщика",
                        "example": "one-ring-7548"
                    },
                    "stock": {
                        "type": "number",
                        "description": "Остаток",
                        "example": 1
                    },
                    "warehouseName": {
                        "type": "string",
                        "description": "Склад с товаром",
                        "example": "Пещеры Мглистых гор"
                    },
                    "warehouseId": {
                        "type": "number",
                        "description": "ID склада",
                        "example": 7543
                    }
                }
            },
            "StocksAPIResponse": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer",
                        "example": 451
                    },
                    "stocks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Stock"
                        }
                    }
                }
            },
            "SetStockAPIRequest": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "barcode": {
                            "type": "string",
                            "description": "Баркод",
                            "example": "656335639"
                        },
                        "stock": {
                            "type": "number",
                            "description": "Остаток",
                            "example": 1
                        },
                        "warehouseId": {
                            "type": "number",
                            "description": "ID склада",
                            "example": 7543
                        }
                    }
                }
            },
            "Warehouse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID склада",
                        "example": 5235
                    },
                    "address": {
                        "type": "string",
                        "description": "Адрес склада",
                        "example": "Рохан, Хельмова Падь"
                    }
                }
            },
            "WarehousesAPIResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Warehouse"
                }
            },
            "Info": {
                "type": "array",
                "items": {
                    "type": "object",
                    "description": "Массив номенклатур, их цен, скидок, промокодов",
                    "properties": {
                        "nmId": {
                            "type": "integer",
                            "description": "номенклатура",
                            "example": 1234567
                        },
                        "price": {
                            "type": "number",
                            "format": "float",
                            "description": "цена",
                            "example": 1000
                        },
                        "discount": {
                            "type": "integer",
                            "description": "скидка",
                            "example": 10
                        },
                        "promoCode": {
                            "type": "number",
                            "format": "float",
                            "description": "промокод",
                            "example": 5
                        }
                    }
                }
            },
            "OrdersAPIResponse": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer",
                        "description": "Общее количество заказов по заданным параметрам (за указанный промежуток времени)",
                        "example": 1
                    },
                    "orders": {
                        "type": "array",
                        "description": "Список заказов",
                        "items": {
                            "$ref": "#/components/schemas/Order"
                        }
                    }
                }
            },
            "OrderStatus": {
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string",
                        "description": "Идентификатор заказа",
                        "maxLength": 32
                    },
                    "status": {
                        "type": "integer",
                        "description": "0\t- Новый заказ 1\t- Принял заказ 2\t- Сборочное задание завершено 3\t- Сборочное задание отклонено 5 - На доставке курьером 6 - Курьер довез и клиент принял товар 7 - Клиент не принял товар\n",
                        "enum": [0, 1, 2, 3, 5, 6, 7],
                        "example": 2
                    }
                }
            },
            "UpdateOrderStatus": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/OrderStatus"
                }
            },
            "UpdateOrderStatusError": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "boolean",
                        "description": "Флаг ошибки",
                        "example": true
                    },
                    "errorText": {
                        "type": "string",
                        "description": "Описание ошибки",
                        "example": "Несоответствие статусов сборочных заданий. Проверьте их правильность. Номера заказов: [123, 321]"
                    },
                    "data": {
                        "type": "object"
                    },
                    "additionalErrors": {
                        "type": "object"
                    }
                }
            }
        }
    }
}
